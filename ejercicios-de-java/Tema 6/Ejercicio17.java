/**
 * Ejercicio17
 * 
 * Realiza un programa que pinte por pantalla una pecera con un pececito dentro.
 * Se debe pedir al usuario el ancho y el alto de la pecera, que como m칤nimo
 * ser치n de 4 unidades. No hay que comprobar que los datos se introducen
 * correctamente; podemos suponer que el usuario los introduce bien. Dentro
 * de la pecera hay que colocar de forma aleatoria un pececito, que puede estar
 * situado en cualquiera de las posiciones que quedan en el hueco que forma el
 * rect치ngulo.
 *
 *
 * @author Iv치n Miranda Stavenuiter
 */

public class Ejercicio17 {
  public static void main(String[] args) {
    
    //Lo primero que nos pide el ejercicio es dibujar el rect치ngulo que
    //contendr치 al pececito dentro.
    
    System.out.println("Este programa pinta una pecera con un pececito muy");
    System.out.println("bonito dentro. Recuerda que la altura y la anchura");
    System.out.println("han de ser como m칤nimo de 4.");
    System.out.println();
    System.out.println("Por favor, introduce la altura del rect치ngulo: ");
    int altura = Integer.parseInt(System.console().readLine());
    
    System.out.println("Introduce la anchura del rect치ngulo: ");
    int ancho = Integer.parseInt(System.console().readLine());
    
    int relleno = ancho - 2;
    int auxiliar = altura - 2;
    int auxVertical = altura - 2;
    int auxHorizontal = ancho - 2;
    int lineasUno;
    int lineasDos;
    int espaciosUno;
    int espaciosDos;
    
    for (int i = 0; i < ancho; i++) {
      System.out.print("* ");
    }
      System.out.println();
      
    //Empezamos con las l칤neas verticales:
    
    lineasUno = (int)(Math.random() * auxiliar + 1);
    
    for (int i = 1; i < lineasUno; i++) {
      
      System.out.print("* ");
      
      for (int n = 0; n < relleno; n++) {
      System.out.print("  ");
      }
      
      System.out.print("*");
      System.out.println();
    }
    
    //Aqu칤 lo que estamos haciendo es decirle al programa cu치ntas l칤neas
    //debe imprimir hasta llegar a la l칤nea en la que vamos a insertar el pez,
    //que va a ser otro n칰mero aleatorio. Iniciamos la i del for ya en 1
    //porque el l칤mite de las iteraciones no queremos incluirlo. Esa l칤nea
    //ser치 la indicada para insertar el pez.
    
    //Ya hemos llegado a la altura aleatoria en la que insertamos el pez.
    //Ahora hacemos el mismo proceso pero en horizontal. Restando 2 al ancho,
    //creo un n칰mero aleatorio de 1 a (ancho - 2) y justo ah칤 meto el s칤mbolo.
    //Lo inicio en 1 por la misma raz칩n que antes: el s칤mbolo contar치 como
    //un espacio, por lo que si ponemos 0 nos exceder칤amos.
    
    System.out.print("* ");
    
    espaciosUno = (int)(Math.random() * relleno + 1);
    
      for (int i = 1; i < espaciosUno; i++) {
        System.out.print("  ");
      }
      
    //Pintamos el relleno como queramos.
      
    System.out.print("游땙 ");
      
    espaciosDos = relleno - espaciosUno;
    
    //Ahora completamos los espacios hasta terminar la l칤nea. Al ancho
    //le restamos los espacios ocupados m치s el s칤mbolo, que coincide con
    //el n칰mero aleatorio. En este caso s칤 que hay que iniciar a 0 o bien
    //igualar al l칤mite de iteraciones. 
      
      for (int i = 0; i < espaciosDos; i++) {
        System.out.print("  ");
      }
        System.out.print("*");
        System.out.println();
        
    //Por 칰ltimo, tomamos las l칤neas restantes a imprimir en cuanto a altura.
    //Aqu칤 hemos iniciado en 0 de nuevo, ya que antes ten칤amos el excedente
    //del s칤mbolo y ahora no.
    
    lineasDos = auxiliar - lineasUno;
    
      for (int i = 0; i < lineasDos; i++) {
      
        System.out.print("* ");
      
        for (int n = 0; n < relleno; n++) {
          System.out.print("  ");
          }
      
        System.out.print("*");
        System.out.println();
    } 
    
    //L칤nea final del rect치ngulo.
      
    for (int i = 0; i < ancho; i++) {
      System.out.print("* ");
    }
  }
}
    
    
    
       
    
    
  
    
